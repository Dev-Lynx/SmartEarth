<UserControl x:Class="SmartEarth.Desktop.Views.ScheduleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SmartEarth.Desktop.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:coreModels="clr-namespace:SmartEarth.Common.Infrastructure.Models;assembly=SmartEarth.Common.Infrastructure"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:transitions="clr-namespace:Transitionals.Transitions;assembly=Transitionals"
             xmlns:transitionControls="clr-namespace:Transitionals.Controls;assembly=Transitionals"
             xmlns:core="clr-namespace:SmartEarth.Common.Infrastructure;assembly=SmartEarth.Common.Infrastructure"
             xmlns:coreConverters="clr-namespace:SmartEarth.Common.Infrastructure.Resources.Converters;assembly=SmartEarth.Common.Infrastructure"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" Template="{DynamicResource WaitableControl}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <coreConverters:LengthToThicknessConverter x:Key="LeftBasedLengthToThicknessConverter" Negate="True" Left="True" Top="False" Right="False" Bottom="False"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Button Template="{DynamicResource ContentOnlyTemplate}">
        <Grid>
            <DockPanel Background="{DynamicResource MainBrush}" Margin="20">
                <Grid DockPanel.Dock="Left" Width="400">
                    <Grid.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="/SmartEarth.Common.Infrastructure;component/Resources/Material.xaml"/>
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!--
                <TextBlock Grid.ColumnSpan="3" Foreground="{DynamicResource AuxBrush}" FontSize="40" Padding="3" Margin="10" Opacity=".7" FontWeight="Bold" VerticalAlignment="Center">
                    <Run Text="{Binding Schedule.CurrentDay, Mode=OneWay}"/>,
                    <LineBreak/>
                    <Run Text="{Binding Schedule.CurrentMonth, Mode=OneWay}"/>
                    <Run Text="{Binding Schedule.CurrentDay.Ordinal, Mode=OneWay}"/>,
                    <LineBreak/>
                    <Run Text="{Binding Schedule.CurrentYear, Mode=OneWay}"/>
                </TextBlock>
                -->
                    <StackPanel Grid.ColumnSpan="3">
                        <StackPanel Orientation="Horizontal">
                            <ComboBox materialDesign:ComboBoxAssist.ClassicMode="True" Panel.ZIndex="1" Grid.ColumnSpan="3" ItemsSource="{x:Static coreModels:Calender.DaysOfTheWeek}" SelectedItem="{Binding CurrentWeekDay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderBrush="#00FFFFFF" FontWeight="Bold" FontSize="40" Foreground="{DynamicResource AuxBrush}" Width="Auto" Padding="5" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBlock Text="," Margin="-17 0 0 0" FontWeight="Bold" FontSize="40" Foreground="{DynamicResource AuxBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <ComboBox materialDesign:ComboBoxAssist.ClassicMode="True" Panel.ZIndex="1" ItemsSource="{x:Static coreModels:Calender.MonthsOfTheYear}" SelectedItem="{Binding CurrentMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="40" BorderBrush="#00FFFFFF" Foreground="{DynamicResource AuxBrush}" Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <ComboBox materialDesign:ComboBoxAssist.ClassicMode="True" Panel.ZIndex="1" IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding Days, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding CurrentDay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="40" BorderBrush="#00FFFFFF" Foreground="{DynamicResource AuxBrush}" Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-5 0 0 0">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Ordinal}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBlock Text="," Margin="-17 -20 0 0" FontWeight="Bold" FontSize="40" Foreground="{DynamicResource AuxBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                        </StackPanel>
                        <ComboBox ItemsSource="{Binding Schedule.Years}" materialDesign:ComboBoxAssist.ClassicMode="True" SelectedItem="{Binding CurrentYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="40" BorderBrush="#00FFFFFF" Foreground="{DynamicResource AuxBrush}" Width="Auto" VerticalAlignment="Center" HorizontalAlignment="Left" IsSynchronizedWithCurrentItem="True"/>
                    </StackPanel>



                    <Border Grid.Row="1" Grid.ColumnSpan="3">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Schedule.IsBusy}" Value="True"/>
                                        </MultiDataTrigger.Conditions>

                                        <MultiDataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="00:00:0.3" Duration="00:00:00" To="0"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiDataTrigger.EnterActions>

                                        <MultiDataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation To="1" DecelerationRatio=".5" BeginTime="00:00:01" Duration="00:00:0.5" Storyboard.TargetProperty="Opacity"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiDataTrigger.ExitActions>

                                    </MultiDataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border Grid.Row="1" Grid.ColumnSpan="3">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MonthViewActive}" Value="false">
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="Visibility">
                                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:0.4" From="0" To="1" AccelerationRatio=".2" DecelerationRatio=".4"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>

                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:0.4" From="1" To="0" AccelerationRatio=".2" DecelerationRatio=".4"/>
                                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:0.4" Storyboard.TargetProperty="Visibility">
                                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ListBox Padding="0" Margin="0 10 10 10" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ItemsSource="{Binding Schedule.SelectedDay.Tasks}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <DataTemplate.Resources>
                                            <Storyboard x:Key="ItemAnimation" AutoReverse="False">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MainPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>

                                                <ThicknessAnimation Storyboard.TargetName="MainBorder" Duration="0:0:0.3" Storyboard.TargetProperty="Margin" To="0"  />


                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.3" Storyboard.TargetName="StatusWrapper" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.3" Storyboard.TargetName="StatusWrapper" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.3" Storyboard.TargetName="StatusWrapper" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <!--
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MainPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    -->
                                            </Storyboard>
                                        </DataTemplate.Resources>

                                        <DataTemplate.Triggers>
                                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                <BeginStoryboard Storyboard="{StaticResource ItemAnimation}"/>
                                            </EventTrigger>
                                        </DataTemplate.Triggers>

                                        <Border Name="MainBorder" Margin="0 20">
                                            <DockPanel Name="MainPanel" Margin="0 3 10 3">
                                                <Border Opacity="0" Width="30" DockPanel.Dock="Left" Margin="0 5 5 5" Name="StatusWrapper">
                                                    <Border.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform CenterX="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Border}, Path=ActualWidth, Converter={StaticResource HalfConverter}}" CenterY="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Border}, Path=ActualHeight, Converter={StaticResource HalfConverter}}"/>
                                                        </TransformGroup>
                                                    </Border.RenderTransform>
                                                    <Image Source="{DynamicResource RoundPending}" ToolTip="Pending" DockPanel.Dock="Left" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource ClearImage}"/>
                                                </Border>
                                                <Border DockPanel.Dock="Left" Background="{Binding Color.Brush}" BorderThickness="1" BorderBrush="{DynamicResource AuxBrush}" CornerRadius="5"  Width="25" Height="25"/>
                                                <TextBlock Text="{Binding Due, StringFormat={}{0:h:mm tt}}" DockPanel.Dock="Left" Foreground="{DynamicResource AuxBrush}" FontWeight="Bold" Width="70" TextAlignment="Center" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding Name, Converter={StaticResource CaseConverter}}" Foreground="{DynamicResource AuxBrush}" FontWeight="Bold" VerticalAlignment="Center"/>
                                            </DockPanel>
                                        </Border>

                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ListBox>
                        </Border>
                    </Border>



                    <Button Style="{DynamicResource MaterialDesignFlatButton}" Grid.Row="2"  Command="{Binding PreviousCommand}" Height="50" IsEnabled="{Binding Schedule.CanPrevious, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <Image Source="{DynamicResource BackIcon}" Style="{DynamicResource ClearImage}" />
                    </Button>
                    <UserControl Grid.Row="2" Grid.Column="1" Template="{DynamicResource EllipseStaller}" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5" Visibility="Hidden">
                        <UserControl.Style>
                            <Style TargetType="UserControl">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Schedule.IsBusy}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:0.4" From="0" To="1" AccelerationRatio=".2" DecelerationRatio=".4"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>

                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="00:00:0.4" From="1" To="0" AccelerationRatio=".2" DecelerationRatio=".4"/>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:0.4" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </UserControl.Style>
                    </UserControl>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}" Grid.Column="2" Grid.Row="2"  Command="{Binding NextCommand}" Height="50" IsEnabled="{Binding Schedule.CanNext, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <Image Source="{DynamicResource ForwardIcon}" Style="{DynamicResource ClearImage}" />
                    </Button>
                </Grid>

                <!--
        <ContentControl prism:RegionManager.RegionName="{x:Static core:Core.SCHEDULE_REGION}" />
        -->

                <transitionControls:TransitionElement prism:RegionManager.RegionName="{x:Static core:Core.SCHEDULE_REGION}">
                    <transitionControls:TransitionElement.Transition>
                        <transitions:FadeAndBlurTransition/>
                    </transitionControls:TransitionElement.Transition>
                </transitionControls:TransitionElement>
            </DockPanel>
        </Grid>
    </Button>
    
</UserControl>
