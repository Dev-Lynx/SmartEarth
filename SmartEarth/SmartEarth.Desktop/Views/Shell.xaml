<Window x:Class="SmartEarth.Desktop.Views.Shell"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SmartEarth.Desktop"
        xmlns:transitionals="clr-namespace:Transitionals;assembly=Transitionals"
        xmlns:transitions="clr-namespace:Transitionals.Transitions;assembly=Transitionals"
        xmlns:transitionControls="clr-namespace:Transitionals.Controls;assembly=Transitionals"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:coreControls="clr-namespace:SmartEarth.Common.Infrastructure.Resources.Controls;assembly=SmartEarth.Common.Infrastructure"
        xmlns:ribbon="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:core="clr-namespace:SmartEarth.Common.Infrastructure;assembly=SmartEarth.Common.Infrastructure"
        xmlns:prism="http://prismlibrary.com/" WindowState="Maximized"
        mc:Ignorable="d" BorderThickness="2 0 2 2" BorderBrush="{DynamicResource AuxBrush}"
        Title="MainWindow" Height="600" Width="1000" MinHeight="600" MinWidth="1400" WindowStyle="None" ResizeMode="CanResize">
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="#00FFFFFF"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <Border x:Name="border" Opacity=".3" BorderBrush="{DynamicResource Transparent}" BorderThickness="0" Background="{DynamicResource Transparent}" SnapsToDevicePixels="true" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource FaintAuxBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource IntenseAuxBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value=".5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <Grid Height="30" DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="SmartEarth" Foreground="{DynamicResource AuxBrush}" VerticalAlignment="Center" FontWeight="Bold" Opacity=".9" FontSize="16" Grid.ColumnSpan="4" TextAlignment="Center">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <prism:InvokeCommandAction Command="{Binding MoveCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBlock>
            <Button Style="{DynamicResource WindowButtonStyle}" Padding="5" Grid.Column="1" Command="{Binding MinimizeCommand}" DockPanel.Dock="Right">
                <Image Source="{DynamicResource MinimizeIcon}" Style="{DynamicResource ClearImage}"/>
            </Button>
            <Button Padding="5" Grid.Column="2" Command="{Binding MaximizeCommand}" DockPanel.Dock="Right" Style="{DynamicResource WindowButtonStyle}">
                <Image Source="{Binding MaximizeRestoreIcon}" Style="{DynamicResource ClearImage}"/>
            </Button>
            <Button Padding="5" Grid.Column="3" Command="{Binding CloseCommand}" DockPanel.Dock="Right" Style="{DynamicResource WindowButtonStyle}">
                <Image Source="{DynamicResource CloseIcon}" Style="{DynamicResource ClearImage}"/>
            </Button>
        </Grid>
        <ContentControl DockPanel.Dock="Top" Panel.ZIndex="1" prism:RegionManager.RegionName="{x:Static core:Core.MENU_REGION}"/>
        
        <!--
        <ContentControl prism:RegionManager.RegionName="{x:Static core:Core.MAIN_REGION}"/>
        -->
        
        <transitionControls:TransitionElement prism:RegionManager.RegionName="{x:Static core:Core.MAIN_REGION}">
            <transitionControls:TransitionElement.Transition>
                <transitions:FadeAndGrowTransition />
            </transitionControls:TransitionElement.Transition>
        </transitionControls:TransitionElement>
    </DockPanel>
</Window>
